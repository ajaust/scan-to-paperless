version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.6
    environment:
      PATH: /usr/local/bin:/usr/local/sbin:/usr/sbin:/usr/bin:/sbin:/bin:/home/circleci/.local/bin
    steps:
      - checkout
      - setup_remote_docker
      - run: docker build --target=base --tag=sbrunner/scan-to-paperless .
      - run: docker build --target=all --tag=sbrunner/scan-to-paperless:all .
      - run: docker build --target=experimental --tag=sbrunner/scan-to-paperless:experimental .
      - run: docker build --target=tests --tag=tests .
      - run:
          name: pylint
          command: docker run --rm tests pylint process
          when: always
      - run:
          name: pyflakes
          command: docker run --rm tests python3 -m pyflakes .
          when: always
      - run:
          name: bandit
          command: docker run --rm tests bandit -r process
          when: always
      - run:
          name: mypy
          command: docker run --rm tests mypy -- process
          when: always
      - run:
          name: codespell
          command: docker run --rm tests codespell --check-filenames --skip=./Deskew/*,*.pyc,*.png
          when: always
      - run:
          name: pytest
          command: >
            docker run --rm --env=PYTHONPATH=/opt/
            --volume=`pwd`/htmlcov:/tests/htmlcov --volume=`pwd`/results:/results
            tests bash -c '
            mv /opt/process /opt/process.py &&
            cd /tests &&
            coverage run --source=process --module pytest --verbose --color=yes . &&
            coverage report &&
            coverage html'
      - store_artifacts:
          path: results
          destination: tests-results
      - store_artifacts:
          path: htmlcov
          destination: htmlcov
      - run: docker login --username $DOCKER_USER --password $DOCKER_PASS

      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              docker push sbrunner/scan-to-paperless
              docker push sbrunner/scan-to-paperless:all
              docker push sbrunner/scan-to-paperless:experimental
            fi
      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "test" ]
            then
              docker tag sbrunner/scan-to-paperless sbrunner/scan-to-paperless:test
              docker tag sbrunner/scan-to-paperless:all sbrunner/scan-to-paperless:test-all
              docker tag sbrunner/scan-to-paperless:experimental sbrunner/scan-to-paperless:test-experimental
              docker push sbrunner/scan-to-paperless:test
              docker push sbrunner/scan-to-paperless:test-all
              docker push sbrunner/scan-to-paperless:test-experimental
            fi
      - run:
          name: Init Git
          command: |
            git remote add push https://${GITHUB_TOKEN}@github.com/sbrunner/scan-to-paperless
            git config credential.helper 'cache --timeout=120'
            git config user.email "<ci@ci.com>"
            git config user.name "CI"
      - run:
          name: Init pypi
          command: |
            echo "[pypi]" > ~/.pypirc
            echo "username = ${PYPI_USER}" >> ~/.pypirc
            echo "password = ${PYPI_PASS}" >> ~/.pypirc
            pip install --user wheel twine
      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "test" ]
            then
              python setup.py egg_info --tag-date --tag-build dev sdist bdist_wheel
              twine upload dist/*
            fi
      - deploy:
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              python setup.py egg_info --no-date sdist bdist_wheel
              twine upload dist/*
            fi
      - run:
          name: Bump bersion
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]
            then
              pip install --user bump-anything
              bump minor
              git add setup.py
              git commit --allow-empty -m "[skip ci] Bump Version"
              git push push ${CIRCLE_BRANCH}
            fi
